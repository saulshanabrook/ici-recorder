# based off of
# https://github.com/vfarcic/docker-flow-cron/blob/1988f134fcc863b0832561121c1428f76f35db83/.travis.yml
env:
  DOCKER_COMPOSE_VERSION: 1.12.0
  TAG: 0.${TRAVIS_BUILD_NUMBER}

services:
  - docker
before_install:
  # need docker 1.13.0+ for compose file 3.0 which is required for pushing stacks
  # https://gist.github.com/dylanscott/ea6cff4900c50f4e85a58c01477e9473
  - sudo sh -c 'echo "deb https://apt.dockerproject.org/repo ubuntu-$(lsb_release -cs) main" > /etc/apt/sources.list.d/docker.list'
  - curl -fsSL https://apt.dockerproject.org/gpg | sudo apt-key add -
  - sudo apt-key fingerprint 58118E89F3A912897C070ADBF76221572C52609D
  - sudo apt-get update
  - sudo apt-get -y install "docker-engine=1.13.1-0~ubuntu-$(lsb_release -cs)"
  # upgrade docker compose as well
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose-new
  - chmod +x docker-compose-new

before_script:
  - ./docker-compose-new build build-alluxio
  - mkdir alluxio-out
  - ./docker-compose-new run --rm -T build-alluxio | tar -zxC alluxio-out -f -


  - cp alluxio-out/core/client/target/alluxio-core-client-1.5.0-SNAPSHOT-jar-with-dependencies.jar jupyter-notebook/alluxio.jar
  - cp alluxio-out/core/client/target/alluxio-core-client-1.5.0-SNAPSHOT-jar-with-dependencies.jar clojure/alluxio.jar
  - cp -r alluxio-out/ alluxio-server/alluxio-out

  - cp alluxio/alluxio-site.properties alluxio-server/
  - cp alluxio/alluxio-site.properties clojure/
  - cp alluxio/alluxio-site.properties jupyter-notebook/

  - ./docker-compose-new build alluxio-worker alluxio-master test-alluxio
  - ./docker-compose-new up -d alluxio-worker alluxio-master
  - ./docker-compose-new build jupyter-notebook test-jupyter-notebook
  - ./docker-compose-new build test-clojure
script:
  - ./docker-compose-new run --rm test-alluxio
  - ./docker-compose-new run --rm test-clojure
  - ./docker-compose-new run --rm test-jupyter-notebook

after_success:
  - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  - ./docker-compose-new push
  - TAG=latest ./docker-compose-new push
  - openssl aes-256-cbc -K $encrypted_a3016063d1da_key -iv $encrypted_a3016063d1da_iv -in key.enc -out key -d
  - chmod 600 key
  - "scp -i key  -o StrictHostKeyChecking=no docker-compose.yml $SERVER_USERNAME@$EXTERNAL_DOCKER_HOST"
  - ssh -i key -o StrictHostKeyChecking=no $SERVER_USERNAME@$EXTERNAL_DOCKER_HOST sudo TAG=${TAG} SERVER_HOST=${EXTERNAL_DOCKER_HOST} docker stack deploy -c docker-compose.yml ici-recorder
